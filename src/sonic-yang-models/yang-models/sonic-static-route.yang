module sonic-static-route{

        yang-version 1.1;

        namespace "http://github.com/Azure/sonic-static-route";
        prefix sroute;

        import sonic-vrf {
                prefix vrf;
        }

        import ietf-inet-types {
                prefix inet;
        }

        import sonic-types {
                prefix stypes;
        }
        
	organization
		"SONiC";
	contact
		"SONiC";

        description "STATIC ROUTE yang Module for SONiC OS";

        revision 2022-03-17 {
                description "First Revision";
        }

        container sonic-static-route{

                container STATIC_ROUTE {

                        description "STATIC_ROUTE part of config_db.json";

                        list STATIC_ROUTE_LIST {

                                key "vrf_name prefix";

								leaf prefix {
									type stypes:sonic-ip4-prefix;
									description "prefix is the destination IP address, as key";
								}
								
								leaf vrf_name {
									type union {
										type string {
											pattern "default";
										}
										type leafref {
											path "/vrf:sonic-vrf/vrf:VRF/vrf:VRF_LIST/vrf:name";
										}
									}
								   description "Virtual Routing Instance name as key";
								}
											
								leaf nexthop {
									type inet:ip-address;
									description "The next-hop that is to be used for the 
									static route as IP address. When interface needs to be 
									specified, use 0.0.0.0 as leaf value";
								}   
								
								
								leaf ifname {
									type union {
										type string {
											pattern "Ethernet([1-3][0-9]{3}|[1-9][0-9]{2}|[1-9][0-9]|[0-9])" {
												error-message "Invalid interface name";
												error-app-tag interface-name-invalid;
											}
										}
										type string {
											pattern "";
										}
									}
									description "When interface is specified, forwarding happens through it";
								}

								leaf distance {
									type string;
									description "Administrative Distance (preference) of the entry.  The
										preference defines the order of selection when multiple
										sources (protocols, static, etc.) contribute to the same
										prefix entry.  The lower the preference, the more preferable the
										prefix is.  When this value is not specified, the preference is
										inherited from the default preference of the implementation for
										static routes.";
								}

								leaf nexthop-vrf  {
									type union {
										type string {
												pattern "default";
										}
										type leafref {
												path "/vrf:sonic-vrf/vrf:VRF/vrf:VRF_LIST/vrf:name";
										}
									}
								   description "VRF name of the nexthop. This is for vrf leaking";
								}


								leaf blackhole {
									type string;
									default "false";
									description "blackhole refers to a route that, if matched, discards the message silently.";
								} 
								 
                        } /* end of list STATIC_ROUTE_LIST */

                } /* end of container STATIC_ROUTE */

        } /* end of container sonic-static_route */

} /* end of module sonic-static_route */
